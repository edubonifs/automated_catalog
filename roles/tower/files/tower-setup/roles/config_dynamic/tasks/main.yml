---
- name: Set database to internal or external
  set_fact:
    config_dynamic_database: "{{ ( (pg_host is not defined or pg_host == '' or pg_host == '127.0.0.1' or pg_host == '::1') or (pg_host is match('/.*')) ) | ternary('internal', 'external') }}"

- name: Database decision
  debug: var=config_dynamic_database

- name: Set postgres host and port to local if not set
  set_fact:
    pg_host: '127.0.0.1'
    pg_port: 5432
  when: "pg_host is not defined or pg_host == ''"

- name: Ensure connectivity to hosts and gather facts
  setup:

- name: Ensure user is root
  fail: msg="UID on remote machine is {{ ansible_effective_user_id }} ({{ config_dynamic_user }} required). Check Ansible connection and become settings."
  when: ansible_effective_user_id != config_dynamic_user

# Note: We don't validate postgres connectivity because the clients tools are not yet installed to validate with.
# We could verify socket connectivity to the ip/port but would need to do so using delegate_to
